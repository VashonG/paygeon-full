fetch(getBackendServerUrl()+"events").then(function(e){return e.json()}).then(e=>{if(e){let t=document.createElement("script");e.forEach(e=>{let m=`async function ${e.eventName}(ev, url_params={}){
                            let element,targetElement, formID; 
                             if(ev){
                               element =  ev.target|| ev.srcElement ;
                               targetElement = ev.currentTarget ;
                               ev.preventDefault();
                               formID = element.id ? $("#"+element.id):'';
                             } 
                             const ifValidToProcess = ev && ev.type === "submit" ? formID && formID.valid() && formID.validate().pendingRequest === 0 : true;
                             let formSubmitBtn;
                             let formSubmitBtnText;
                             if(formID){
                              formSubmitBtn = formID.find(':button[type=submit]');
                              formSubmitBtnText = formSubmitBtn.html()
                             }
                            
                             if(ifValidToProcess) {
                              formSubmitBtn && formSubmitBtn.prop('disabled', true);
                              formSubmitBtn && formSubmitBtn.empty().append("<i class='fa fa-spinner fa-spin'></i>");
                                let response;
                                try{`;e.actions.forEach((e,t)=>{const r=e["parameters"];let n={};r.forEach(e=>{n[e.name]=e.value});e=`
            if(response && response.status==='error' && ${"showAlertMessage"!==e.name}){
              formSubmitBtn && formSubmitBtn.prop('disabled', false);
              formSubmitBtn && formSubmitBtn.html(formSubmitBtnText);
                    return;
              }
              response = await ${e.name}({parameters:${JSON.stringify(n)},response:response?response.data:'',element:element, targetElement:targetElement, url_params:url_params});
            `;m+=`
  `+e}),m+=`
            formSubmitBtn && formSubmitBtn.prop('disabled', false);
            formSubmitBtn &&  formSubmitBtn.html(formSubmitBtnText);
          }
                 catch(error){
                    console.log("error",error)
                    formSubmitBtn && formSubmitBtn.prop('disabled', false);
                    formSubmitBtn && formSubmitBtn.html(formSubmitBtnText);
                  }
                 } else {
                   console.log("I am submit event and not valid")
                 }
                }`,t.innerHTML=t.innerHTML+"\n\n"+m}),document.head.appendChild(t)}else console.log("error")});
//# sourceMappingURL=utils.js.map